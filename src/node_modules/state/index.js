const state = {
  agentTypes: [
    {
      id: 'Person'
    },
    {
      id: 'Group'
    }
  ],
  agents: [
    {
      id: 'mikey',
      type: 'Person',
      name: 'Mikey',
      image: 'http://images.clipartpanda.com/t-rex-dinosaur-clip-art-T-Rex-Dinosaur_1.png'
    },
    {
      id: 'simon',
      type: 'Person',
      name: 'Simon',
      image: 'http://www.cats.org.uk/uploads/images/pages/photo_latest14.jpg'
    },
    {
      id: 'holodex',
      type: 'Group',
      name: 'Holodex',
      image: 'https://blog.dinosaur.is/content/images/2014/Oct/nation-holon1.png'
    },
    {
      id: 'enspiral',
      type: 'Group',
      name: 'Enspiral',
      image: 'https://logo.clearbit.com/enspiral.com'
    }
  ],
  relationshipDirections: ['source', 'target', 'context'],
  relationshipTypes: [
    {
      id: 'is-member-of',
      name: 'is member of',
      labels: ['{source} belongs to {target}', '{source} is part of {target}'],
      color: '#3F51B5'
    },
    {
      id: 'stewards',
      name: 'stewards',
      labels: ['{source} stewards {target}'],
      color: '#F44336'
    }
  ],
  relationships: [
    {
      id: 'mikey-is-member-of-holodex',
      type: 'is-member-of',
      source: 'mikey',
      target: 'holodex',
    },
    {
      id: 'simon-is-member-of-holodex',
      type: 'is-member-of',
      source: 'simon',
      target: 'holodex',
    },
    {
      id: 'holodex-is-member-of-enspiral',
      type: 'is-member-of',
      source: 'holodex',
      target: 'enspiral',
    },
    {
      id: 'mikey-stewards-simon',
      type: 'stewards',
      source: 'mikey',
      target: 'simon',
      context: 'enspiral'
    }
  ],
  queries: [],
  queryTypes: [
    {
      id: 'stewards/person/source',
      relationshipType: 'stewards',
      agentType: 'Person',
      direction: 'target',
      label: 'People who steward {target}'
    },
    {
      id: 'stewards/person/target',
      relationshipType: 'stewards',
      agentType: 'Person',
      direction: 'source',
      label: 'People stewarded by {source}'
    },
    {
      id: 'stewards/person/context',
      relationshipType: 'stewards',
      agentType: 'Person',
      direction: 'context',
      label: 'People who steward in {context}'
    },
    {
      id: 'is-member-of/person/target/0',
      relationshipType: 'is-member-of',
      agentType: 'Person',
      direction: 'target',
      label: 'People who belong to {target}'
    },
    {
      id: 'is-member-of/person/target/1',
      relationshipType: 'is-member-of',
      agentType: 'Person',
      direction: 'target',
      label: 'People in {target}'
    },
    {
      id: 'is-member-of/group/target/0',
      relationshipType: 'is-member-of',
      agentType: 'Group',
      direction: 'target',
      label: 'Groups that are part of {target}'
    },
    {
      id: 'is-member-of/group/target/1',
      relationshipType: 'is-member-of',
      agentType: 'Group',
      direction: 'target',
      label: 'Groups in {target}'
    }
  ],
  relationshipGraph: {}
}

export default state

import { relationshipsByAgentId, relationshipsByAgentIdAndDirection } from 'relationship/getters'
console.log(relationshipsByAgentId(state)['simon'])
console.log(relationshipsByAgentIdAndDirection(state)['simon'])

import { relationshipTypesByAgentId } from 'relationship-type/getters'
console.log(relationshipTypesByAgentId(state)['simon'])

import { queryTypesByRelationshipTypeId, queryTypesByRelationshipTypeIdAndDirection } from 'query-type/getters'
console.log(queryTypesByRelationshipTypeId(state)['is-member-of'])
console.log(queryTypesByRelationshipTypeIdAndDirection(state)['is-member-of'])
