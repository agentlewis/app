var debug = require('debug')('get-corner')
// TODO: use center node rather than screen center

module.exports = function (options) {
  debug('options', options)
  var results = [
    options.corners.se,
    {
      x: options.corners.sw.x - options.width,
      y: options.corners.sw.y
    },
    {
      x: options.corners.ne.x,
      y: options.corners.ne.y - options.height
    },
    {
      x: options.corners.nw.x - options.width,
      y: options.corners.nw.y - options.height
    }
  ]

  if (options.coords[0] > options.center[0]) { // right
    if (options.coords[1] > options.center[1]) {  // bottom
      debug('bottom right', options.corners.se.x, options.width, options.center[0])
      if ((options.corners.se.x + options.width) < options.screenWidth) {
        debug('space right', options.corners.se.x + options.width, options.center[0])
        if ((options.corners.se.y + options.height) < options.screenHeight) {
          return results[0]
        } else { return results[1] }
      } else if ((options.corners.se.y + options.height) < options.screenHeight) {
        return results[2]
      } else { return results[3] }
    } else if ((options.corners.ne.y - options.height) > 0) {
      debug('space top')
      debug('top left', options.coords[0], options.center[0])
      if ((options.corners.ne.x + options.width) < options.screenWidth) {
        debug('space right')
        return results[2]
      } else { return results[3] }
    } else if ((options.corners.ne.x + options.width) < options.screenWidth) {
      debug('top left', options.coords[0], options.center[0])
      return results[0]
    } else { debug('top left', options.coords[0], options.center[0]); return results[3] }
  } else if (options.coords[1] > options.center[1]) {
    debug('bottom right')
    if ((options.corners.sw.x - options.width) > 0) {
      if ((options.corners.sw.y + options.height) < options.screenHeight) {
        return results[1]
      } else { return results[3] }
    } else if ((options.corners.sw.y + options.height) < options.screenHeight) {
      return results[0]
    }
  } else if ((options.corners.nw.x - options.width) > 0) {
    debug('bottom right')
    if (options.corners.nw.y - options.height > 0) {
      return results[3]
    } else { return results[1] }
  } else if (options.corners.nw.y - options.height > 0) {
    debug('bottom right')
    return results[2]
  } else { debug('top left'); return results[0] }
}
