const mapKeys = require('object-keys-map')
const zipObject = require('lodash.zipobject')
const map = require('lodash.map')
const extend = require('xtend')
const mapValues = require('lodash.mapvalues')
const debug = require('debug')('reducers')

import { graphLayoutReducer, nodesFromLayout, linksFromLayout } from 'graph/reducers'
import { queryReducer } from 'query/reducers'
import { agentGraphId } from  'graph/reducers'


const types = require('types')

// function exports a plain object with reducer functions values that handle different parts of the state
export const holodex = (state, action) => {

  debug('action dispatched', action)

  return {
    initialized: appReducer(state, action), 
    agentTypes: types.agentTypes.reducers(state, action),
    agents: types.agents.reducers(state, action),
    agentGraphId: agentGraphId(state, action),
    graphLayout: graphLayoutReducer(state, action),
    links: linksFromLayout(state, action),
    nodes: nodesFromLayout(state, action),
    relationshipTypes: types.relationshipTypes.reducers(state, action),
    relationships: types.relationships.reducers(state, action),
    queriesById:  queryReducer(state, action),
    queryTypes: types.queryTypes.reducers(state, action),
  }
}

const appReducer = (state, action) => {
  if (!action) { return state.initialized }
  if (action.type === 'initialized') {
    return true
  }
  return state.initialized

}
