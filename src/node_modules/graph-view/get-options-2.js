var store = require('base/store')
var Labels = require('./labels')
var clone = require('lodash.clone')
var keys = require('lodash.keys')
var isArray = require('lodash.isarray')
var pluck = require('lodash.pluck')
var dot = require('dot-object')
var obj   = require('lodash.zipobject')
var debug = require('debug')('graph-view:get-options-2')
var Url = require('url')
var config = require('config')
var prefix = Url.format(config.api)
var parentGroup = prefix + '/roleTypes/parent-group'

function put (obj, key, val) {
  if (obj[key]) {
    if (isArray(obj[key])) { obj[key].push(val) }
    else { obj[key] = [obj[key], val] }
  }
  else {
    obj[key] = val
  }
}

module.exports = function (query, model) {
  var options = []

  debug('query', query, model)

  var activeTypesById = query.q.reduce(function (memo, q) {
    if (q.role) {
      if (q.tgt) { memo[q.role +'.target.'+ q.tgt] = q }
      if (q.src) { memo[q.role +'.source.'+ q.src] = q }
      if (q.ctx) { memo[q.role +'.context.'+ q.ctx] = q }
    }
    if (q.link) {
      if (q.tgt) { memo[q.link +'.target.'+ q.tgt] = q }
      if (q.src) { memo[q.link +'.source.'+ q.src] = q }
      if (q.ctx) { memo[q.link +'.context.'+ q.ctx] = q }
    }
    if (q.at) { 
      if (q.tgt) { memo[q.at +'.target.'+ q.tgt] = q }
      if (q.src) { memo[q.at +'.source.'+ q.src] = q }
      if (q.ctx) { memo[q.at +'.context.'+ q.ctx] = q }
    }
    return memo
  }, {})

  dot.object(activeTypesById)


  debug('roleTypes', activeTypesById)

  keys(model.rolesByType).forEach(function (roleTypeId) {

    if (!activeTypesById[roleTypeId]) {
      var roles = model.rolesByType[roleTypeId]
      debug('role', roles)
    }
    else {

    }
  })
  //option: role + target; link + target; role + context; agentType + target;
    //agentType
    //roleType
      //halo
    //linkType
    //agentType
    //context || target


  return options
}
