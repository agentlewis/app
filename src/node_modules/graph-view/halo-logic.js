var debug = require('debug')('halo-logic')
var getKeys = require('lodash.keys')
var each = require('lodash.foreach')

module.exports = function (nonGreedyQueryNodes) {
  debug(nonGreedyQueryNodes)
  var haloMatches = {}
  var keys = getKeys(nonGreedyQueryNodes)

  if (keys.length > 1) {
    var maxCount = 0
    var maxId
    var maxDone
    each(nonGreedyQueryNodes, function (queryNodes, key) {
      if (queryNodes.length > maxCount) {
        maxCount = queryNodes.length
        maxId = key
      }
    })

    each(nonGreedyQueryNodes, function (queryNodeIds, key) {
      if (key !== maxId) {
        haloMatches[key] = []
        for (var i = 0; i < queryNodeIds.length; i++) {
          debug('match', queryNodeIds[i])
          haloMatches[key].push(queryNodeIds[i])
        }

        if (!maxDone) {
          if (queryNodeIds.some(function (nodeId) {
            return nonGreedyQueryNodes[maxId].indexOf(nodeId) !== -1
          })) { // queryNodeIds intersects with largest query
            // do nothing
          } else { // no intersection with largest query -> give it halos
            haloMatches[maxId] = []
            for (var j = 0; j < nonGreedyQueryNodes[maxId].length; j++) {
              haloMatches[maxId].push(nonGreedyQueryNodes[maxId][j])
            }
            maxDone = true
          }
        }
      }
    })


    debug(maxCount, maxId, haloMatches)
  }

  return haloMatches
}
