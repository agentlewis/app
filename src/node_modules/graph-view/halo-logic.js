var debug = require('debug')('halo-logic')
var getIntersection = require('lodash.intersection')
var getKeys = require('lodash.keys')
var each = require('lodash.foreach')

module.exports = function (linkQueriesToNodes) {
  debug(linkQueriesToNodes)
  var haloMatches = {}
  var keys = getKeys(linkQueriesToNodes)

  if (keys.length > 1) {
    var maxCount = 0
    var maxId
    var maxDone
    each(linkQueriesToNodes, function (queryNodes, key) {
      if (queryNodes.length > maxCount) {
        maxCount = queryNodes.length
        maxId = key
      }
    })

    each(linkQueriesToNodes, function (queryNodes, key) {
      if (key !== maxId) {
        var intersection = getIntersection(linkQueriesToNodes[key], linkQueriesToNodes[maxId])
        haloMatches[key] = []
        queryNodes.forEach(function (node) {
          haloMatches[key].push(node.id)
        })

        if (intersection.length === 0 && !maxDone) {
          haloMatches[maxId] = []
          // nodes are separate to largest query
          linkQueriesToNodes[maxId].forEach(function (node) {
            haloMatches[maxId].push(node.id)
          })
          maxDone = true
        }
      }
    })


    debug(maxCount, maxId, haloMatches)
  }

  return haloMatches
}
