// takes node and edge data and out node and edge svgs
var React = require('react')
var r = require('r-dom')
var debug = require('debug')('holodex:graph-view')
var extend = require('xtend')
var Actions = require('actions')

var TagGroup = require('./tag-group')
var Graph = require('./graph')
var LegendWidget = require('legend-widget')
var LegendItem = require('legend-item')


var style = {
  index: {
    position: 'relative'
  },
  tagControl: {
    position: 'absolute',
    zIndex: 1
  },
  graphContainer: {
    width: '100%',
    height: '100%'
  }
}

module.exports = React.createClass({

  propTypes: {
    Icon: React.PropTypes.object
  },

  render: function () {
    var cancelIcon = r(
      this.props.Icon,
      { className: 'cancel-tag', icon: 'clear', onClick: null }
    )

    var props = extend(this.props, { cancelIcon: cancelIcon })

    return (
    r.div({
        className: 'graph-view ',
        style: style.index
      }, [
        r.div({ className: 'tag-control', style: style.tagControl }, [
          r.div({ className: 'tag-group' }, [
            r(TagGroup, props)
          ])
        ]),
        r.div({ className: 'graph-container', style: style.graphContainer }, [
          r(Graph, this.props)
        ]),
        r(LegendWidget, {
          legendItems: [
            r(LegendItem, { label: 'test' })
          ]
        })
      ])
    )
  },

  componentWillReceiveProps: function (nextProps) {
    debug('componentWillReceiveProps', {nextProps: nextProps, state: this.state})
  },

  componentWillUpdate: function (nextProps, nextState) {
    debug('componentWillUpdate', {nextProps: nextProps, nextState: nextState})
  },

  componentDidMount: function () {
    debug('window', window)
    Actions.setWindowSize({
      width: window.screen.availWidth,
      height: window.screen.availHeight
    })

  }

})
