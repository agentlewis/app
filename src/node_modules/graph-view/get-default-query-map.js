var debug = require('debug')('graph-view:get-default-query-map')
var parseQueryToMap = require('./parse-query-to-map')

module.exports = function (model) {
  debug('get-default-query-map', model)
  var query = { q: [] }
  if (model['@type'] === 'Group') {
    if (model.childGroups.length > 0) {
      query.q.push({
        link: '/linkTypes/has-subgroup',
        src: model.id,
        showLink: true
      })
    } else {
      query.q.push({
        link: '/linkTypes/includes',
        src: model.id
      })
    }

    query.q.push({
      link: '/linkTypes/is-part-of',
      src: model.id
    })
  } else {
    var inverseLinkTypes = {}
    model.linkTypesByDirection.asSource.forEach(function (linkType) {
      query.q.push({
        link: linkType.id,
        src: model.id,
        showLink: true
      })
      if (linkType.inverse) inverseLinkTypes[linkType.inverse.id] = linkType.inverse
    })

    model.linkTypesByDirection.asTarget.forEach(function (linkType) {
      if (!inverseLinkTypes[linkType.id]) {
        query.q.push({
          link: linkType.id,
          tgt: model.id,
          showLink: true
        })
      }
    })
  }

  return parseQueryToMap(query)
}
