var store = require('base/store')
var LabelMap = require('./label-map')
var clone = require('lodash.clone')
var debug = require('debug')('graph-view:get-options')

module.exports = function (filters) {
  var options = []
  filters.forEach(function (filter) {
    debug('filter', filter)
    if (!LabelMap.agent[filter.linkType.id]) return //catch group link type 
    if (filter.agent) { // options in relation to the agent
      var agent = store.findById(filter.agent.id)
      debug('agent', agent  )
      if (!filter.linkType.active) { //people who belong to CW
        debug('linktype inactive', filter.agentType.id, LabelMap.agent[filter.linkType.id].label)
        var option = clone(filter)
        option.ref = 'linkType'
        option.label = LabelMap.agent[filter.agentType.id].withLink + LabelMap.agent[filter.linkType.id].label + agent.name
        options.push(option)
      }
      if (!filter.roleType.active) { //people in CW
        debug('roleType inactive', filter.agentType.id, LabelMap.agent[filter.agentType.id].label  )

        var option = clone(filter)
        option.ref = 'roleType'
        option.label = LabelMap.agent[filter.agentType.id].label + agent.name
        options.push(option)
      }
    }
    else { //options are in the context of the agent
      if (!filter.roleType.active) { //a steward
        var option = clone(filter)
        option.ref = 'roleType'
        option.label = LabelMap.context[filter.roleType.id]
        options.push(option)
      }
      if (!filter.linkType.active) { //is a steward of
        var option = clone(filter)
        option.ref = 'linkType'
        option.label = LabelMap.context[filter.linkType.id]
        options.push(option)
      }
    }
  })
  return options
}
