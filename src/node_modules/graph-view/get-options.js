var store = require('base/store')
var Labels = require('./labels')
var clone = require('lodash.clone')
var debug = require('debug')('graph-view:get-options')
var Url = require('url')
var config = require('config')
var prefix = Url.format(config.api)
var parentGroup = prefix + '/roleTypes/parent-group'

module.exports = function (filtersByType, modelName) {
  var options = []
  debug('labels', Labels)
  filtersByType.targetAgent.forEach(function (filter) {
    if (!filter.agentType.active && filter.roleType.id !== parentGroup) {
      debug('filter', filter)
      var option = {
        id: 'Relation-' + filter.id,
        filter: filter,
        label: Labels.targetAgent[filter.roleType.id].template.format(modelName),
        type: 'Relation'
      }
      options.push(option)
    }

    if (!filter.linkType.active && filter.roleType.id !== parentGroup) {
      var option = {
        id: 'Link-' + filter.id,
        filter: filter,
        type: 'Link',
        label: Labels.targetAgent[filter.linkType.id].template.format(modelName)
      }
      options.push(option)
    }

  })

  filtersByType.context.forEach(function (filter) {

    if (!filter.roleType.active) {
      var option = {
        id: 'Role-' + filter.id,
        filter: filter,
        label: Labels.contextAgent[filter.roleType.id].template.format(modelName),
        type: 'Role'
      }
      options.push(option)
    }
    if (!filter.linkType.active) {
      var option = {
        id: 'Link-' + filter.id,
        filter: filter,
        label: Labels.contextAgent[filter.linkType.id].label,
        type: 'Link'
      }
      options.push(option)
    }
  })

  return options
}
