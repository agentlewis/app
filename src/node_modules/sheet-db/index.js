var levelup = require('levelup')
var Token = require('google-oauth-jwt-stream').Token
var RowDown = require('sheet-down').RowDOWN
var through = require('through2')
var forEach = require('lodash.foreach')
var assign = require('lodash.assign')
var types = require('types')

var config = require('config')

forEach(config.data.worksheets, function (worksheet, collectionName) {
  getSheet(assign({}, config.data, {
    worksheet: worksheet
  }))
  .createReadStream()
  .pipe(typify(collectionName))
  .pipe(print())
})

function getSheet (opts) {
  var token = new Token(opts.email, opts.key, opts.scopes)
  var sheetPath = opts.spreadsheet + '/' + opts.worksheet
  return levelup(sheetPath, new RowDown({ token: token}))
}

function typify (collectionName) {
  var type = types.indexedByCollection[collectionName]
  var Model = type.Model

  return through.obj(function (row, enc, cb) {

    var attrs = row.value

    // rename idAttribute to '@id'
    attrs['@id'] = collectionName + '/' + attrs.id
    delete attrs.id

    // add '@type' attribute
    attrs['@type'] = Model.prototype.getType()
    
    cb(null, Model.new(attrs))
  })
}

function print () {
  return through.obj(function (model, enc, cb) {
    console.log(model.toJSON())
    cb()
  })
}
