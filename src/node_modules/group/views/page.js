var React = require('react');
var Bootstrap = require('react-bootstrap');
var _ = require('lodash');
var config = require('uiconfig');
var debug = require('debug')("craftodex:ui:group:views:page")

var router = require('router');
var registry = require('registry');
var Group = require('group/model');
var GraphView = require('graph-view/graph-view');

module.exports = React.createClass({

  getInitialState: function () {
    return {
      prefix: config.api + "/relationshipTypes/",
      predicates: ['steward']
    }
  },

  componentDidMount: function () {
    this.props.model.on("change", function () {
      this.forceUpdate();
    }, this);
  },

  renderList: function () {
    var model = this.props.model;

    return _.map(model.hasRelsByType, function (rels, relTypeId) {

      var relType = registry.get(relTypeId);

      return (
        <section>
          <header>
            { relType.name }
          </header>
          <Bootstrap.ListGroup>
            {
              rels.map(function (rel) {
                return (
                  <Bootstrap.ListGroupItem>
                    { rel.has.name }
                  </Bootstrap.ListGroupItem>
                );
              })
            }
          </Bootstrap.ListGroup>
        </section>
      );
    });
  },

  renderGraph: function () {
    var model = this.props.model;
   // TODO actions
    var actions = [];
    
    debug("model", model)

    var predicates = this.state.predicates.map(function (pred) { 
      return this.state.prefix + pred 
    }.bind(this));
 
    debug({predicates: predicates, statePredicates: this.state.predicates })

    return (
      <GraphView 
        model={model} 
        predicates={predicates} 
        actions={actions} />
    );
  },

  render: function () {
    var model = this.props.model;
    var route = this.props.route;

    debug("render", this.props);

    var view;
    if (route.query.view === 'list') {
      view = this.renderList();
    } else {
      view = this.renderGraph();
    }

    return (
      <div>
        <header>
          <a href={router.format({
            collection: "groups",
            id: model.id,
          })}>
            {model.name}
          </a>
        </header>
        <article>
          { view }
        </article>
      </div>
    );
  },
});
