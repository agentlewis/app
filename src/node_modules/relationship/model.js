var Model = require('base/model');
var _ = require('lodash');

var RelationshipType = require('relationship-type/model');

function Relationship (attrs, options) {
  var Group = require('group/model');
  var Person = require('person/model');

  var children = _.clone(this._children);

  // polymorphic types for 'is' and 'has' children props
  var is, has;
  if (attrs.is) {
    switch (attrs.is['@type']) {
      case 'Group': children.is = Group; break;
      case 'Person': children.is = Person; break;
    }
  }
  if (attrs.has) {
    switch (attrs.has['@type']) {
      case 'Group': children.has = Group; break;
      case 'Person': children.has = Person; break;
    }
  }

  if (attrs.symmetric) {
    children.symmetric = Relationship;
  }

  if (attrs.relationshipType) {
    children.relationshipType = RelationshipType;
  }

  this._children = children;

  return Model.apply(this, arguments);
}

Model.extend({

  constructor: Relationship,
  modelType: "Relationship",

});

module.exports = Relationship;
