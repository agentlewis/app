var Model = require('base/model')
var debug = require('debug')('holodex:relationship:model')

var roles = require('role/store')
var Roles = require('role/collection')

module.exports = Model.extend({
  typeName: 'Relationship',
  collectionName: 'relationships',

  props: {
    type: 'link'
  },

  initialize: function (attrs, opts) {
    debug('initialize', this)
    Model.prototype.initialize.apply(this, arguments)

    this.roles = new Roles(roles, {
      where: {
        relationship: this
      }
    })
  },

  derived: {
    rolesByType: {
      deps: ['roles'],
      fn: function () {
        var rolesByType = {}
        this.roles.forEach(function (role) {

          // if role type is string,
          if (typeof role.type === 'string') {
            // get associated role type object
            var roleType = this.type.roles.find(function (roleType) {
              return roleType.name === role.type
            })
            role.type = roleType
          }

          rolesByType[role.type.name] = role
        }, this)
        return rolesByType
      },
    },
  },
})
