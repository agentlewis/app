'use strict';

import { createSelector } from 'reselect'
import indexBy from 'lodash.indexby'
import pluck from 'lodash.pluck'
import filter from 'lodash.filter'
import reduce from 'lodash.reduce'
import pick from 'lodash.pick'
import uniq from 'lodash.uniq'
import mapValues from 'lodash.mapvalues'

import { agentsById } from 'agent/getters'
import { relationshipsByAgentId } from 'relationship/getters'

export const relationshipTypes = state => state.relationshipTypes

export const relationshipTypesById = createSelector(
  [relationshipTypes],
  (relationshipTypes) => indexBy(relationshipTypes, 'id')
)
export const relationshipIds = createSelector(
  [relationshipTypes],
  (relationshipTypes) => pluck(relationshipTypes, 'id')
)

export const relationshipTypesByAgentId = createSelector(
  [relationshipTypesById, agentsById, relationshipsByAgentId],
  (relationshipTypesById, agentsById, relationshipsByAgentId) => {
    return mapValues(agentsById, (agent, agentId) => {
      let agentRels = relationshipsByAgentId[agentId]
      let relTypeIds = uniq(pluck(agentRels, 'type'))
      return pick(relationshipTypesById, relTypeIds)
    })
  }
)
