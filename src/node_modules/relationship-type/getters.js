'use strict';

import { createSelector } from 'reselect'
import filter from 'lodash.filter'
const initialState = require('./reducers').initialState

const state = { relationships: initialState }


const relIds = state => state.relationships.ids
const relByIds = state => state.relationships.byId

const agentRels = agentId => {
  return createSelector(
    [relByIds],
    relByIds => {
      return filter(relByIds, (relationship) => {
        return (
          relationship.source === agentId ||
          relationship.target === agentId ||
          relationship.context === agentId
        )
      })
    }
  )
}

const agentRelsSource = agentId => {
  return createSelector(
    [relByIds],
    relByIds => {
      return filter(relByIds, (relationship) => {
        return relationship.source === agentId
      })
    }
  )
}

const agentRelsTarget = agentId => {
  return createSelector(
    [relByIds],
    relByIds => {
      return filter(relByIds, (relationship) => {
        return relationship.target === agentId
      })
    }
  )
}

const agentRelsContext = agentId => {
  return createSelector(
    [relByIds],
    relByIds => {
      return filter(relByIds, (relationship) => {
        return relationship.context === agentId
      })
    }
  )
}

module.exports = {
  relIds: relIds,
  relByIds: relByIds,
  agentRels: agentRels,
  agentRelsSource: agentRelsSource,
  agentRelsTarget: agentRelsTarget,
  agentRelsContext: agentRelsContext
}

// console.log(initialState)

console.log(agentRels('simon')(state))
