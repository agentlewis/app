var Model = require('base/model')

var store = require('base/store')
var roleTypes = require('role-type/store')
var linkTypes = require('link-type/store')


module.exports = Model.extend({
  typeName: 'RelationshipType',
  collectionName: 'relationshipTypes',

  props: {
    name: 'string',
    pluralName: 'string',
    description: 'string'
  },

  initialize: function (attrs, opts) {
    Model.prototype.initialize.apply(this, arguments)

    this._roleTypes = roleTypes
      .addDynamicView(this.getId() + '/roleTypes')
      .applyFind({
        relationshipType: this.getId()
      })

    this._linkTypes = linkTypes
      .addDynamicView(this.getId() + '/linkTypes')
      .applyFind({
        relationshipType: this.getId()
      })

  },

  derived: {
    roleTypes: {
      cache: false,
      fn: function () {
        return this._roleTypes.data()
          .map(function (roleType) {
            return store.findById(roleType['@id'])
          })
      }
    },

    linkTypes: {
      cache: false,
      fn: function () {
        return this._linkTypes.data()
          .map(function (linkType) {
            return store.findById(linkType['@id'])
          })
      }
    }

    // sourceRoleTypes: {
    //   cache: false,
    //   deps: ['linkTypes']
    //   fn: function () {
    //     return this.linkTypes.reduce(function (memo, linkType) {
    //       if ()
    //       return memo
    //     })
    //   }
    // }
  }
})
