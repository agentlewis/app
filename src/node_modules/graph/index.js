
var debug = require('debug')('graph:index')

const Node = require('node-ui')

debug("Node", Node)

import { loadAgentGraph, agentGraph } from './action-creators'
import { each, map } from 'lodash'
import el from 'vdom-element'

function center(vector2d, width, height) {
  return {
    x: vector2d.x + width / 2,
    y: vector2d.y + height / 2
  }
}

function renderNodes (nodes) {
  return map(nodes, node => {
    return el(Node, {...node, height: 40, width: 40 })
  })
}


function render (props) {
  debug('render', props)
  const { state, getNodes } = props
  const nodes = getNodes(state)

  return el(
    'svg',
    {
      class: 'graph-svg',
      attributes: {
        width: window.screen.width + 'px',
        height: window.screen.height + 'px'
      }
      // style: { cursor: this.state.dragging ? 'move' : 'auto' },
      // onMouseDown: this.handleMouseDown,
      // onMouseMove: this.handleMouseMove,
      // onMouseUp: this.handleMouseUp,
      // onWheel: this.handleWheel
    },
    [
      el('g', { id: 'transform-layer' }, [
        renderNodes(nodes)
      ])
    ]
  )
}

function beforeMount (props) {
  debug('beforeMount', props)
  const { state, route, getAgentGraphId } = props
  if (route !== getAgentGraphId(state)) {
    return loadAgentGraph(props.route)
  }
}


export {
  beforeMount,
  render
}


// module.exports = React.createClass({
//
//   propTypes: {
//     dispatch: React.PropTypes.func,
//     route: React.PropTypes.object
//   },
//
//   componentWillMount: function () {
//     const { dispatch, route } = this.props
//     debug('componentWillMount', dispatch, loadAgentGraph)
//
//     dispatch(loadAgentGraph(route.context))
//
//   },
//
//   componentWillReceiveProps: function (nextProps) {
//     const { dispatch, route } = this.props
//
//     if (nextProps.route.context !== route.context) { // TODO
//       console.log(nextProps.route)
//       dispatch(loadAgentGraph(route.context))
//     }
//   },
//
//   renderNodes: function (nodes) {
//     if (!nodes) { return [] }
//     return map(nodes, node => {
//       // let vector2d = center(
//       //   node,
//       //   window.screen.width,
//       //   window.screen.height
//       // )
//
//       return React.createElement(Node, {
//         ...node,
//         width: 40,
//         height: 40
//       })
//     })
//   },
//
//   render: function () {
//     const nodes = this.renderNodes(this.props.graph.nodes)
//     debug('nodes', nodes)
//     // debugger
//
//     return (
//       r.svg(
//         {
//           className: 'graph-svg',
//           width: window.screen.width,
//           height: window.screen.height,
//           // style: { cursor: this.state.dragging ? 'move' : 'auto' },
//           // onMouseDown: this.handleMouseDown,
//           // onMouseMove: this.handleMouseMove,
//           // onMouseUp: this.handleMouseUp,
//           // onWheel: this.handleWheel
//         },
//         [
//           r.g(
//             {
//               id: 'transform-layer',
//               // transform: transform(this.props.vector)
//             },
//             [
//               // r.g({className: 'halo-group'}, [
//               //   r(EdgeGroup,
//               //       {
//               //         queries: this.props.queries,
//               //         nodes: nodes,
//               //         edges: edges,
//               //         model: this.props.model,
//               //         route: this.props.route
//               //       }
//               //     )
//               //   ]
//               // ),
//             r.g({className: 'node-group'}, nodes)
//           ]
//         )]
//       )
//     )
//   }
// })
