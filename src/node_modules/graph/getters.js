'use strict';

import { createSelector } from 'reselect'
import { pluck, indexBy, map } from 'lodash'
import initialState from 'state' 
// const R = require('ramda')

export const getLayout = state => state.graphLayout



export const getShouldUpdate = state => {
  if (!state.graph) { return true } 
  return state.graph.shouldUpdate
}

export const graph = state => state.graph
export const getNodes = (state = initialState) => { 
  if (!state.graph) { return undefined }
  return state.graph.nodes
}
  
export const getLinks = state => { 
  if (!state.graph) { return undefined }
  return state.graph.links
}
export const getGroups = state => { 
  if (!state.graph) { return undefined }
  return state.graph.groups
}
export const layoutUpdating = state => state.graph.layoutIsUpdating
export const getIterationsCount = state => state.graph.iterationsCount
export const getContextAgentId = state => state.agentGraphId


// export const getGroupQuerys = createSelector(
//   [getGroups],
//   groups => indexBy(groups, group => )
// )
