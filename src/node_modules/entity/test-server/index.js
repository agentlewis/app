var test = require('tape')
var d = require('d')
var getOwn = Object.getOwnPropertyDescriptor

var Entity = require('../')

test('can extend and create new entity', function (t) {
  var Thing = Entity.extend()
  t.ok(Entity.isPrototypeOf(Thing))
  var thing = Thing.new()
  t.ok(Thing.isPrototypeOf(thing))
  t.ok(Entity.isPrototypeOf(thing))
  t.end()
})

test('can extend entity with value prop', function (t) {
  var Thing = Entity.extend({
    props: {
      isThing: d('e', true),
    },
  })
  t.deepEqual(getOwn(Thing, "isThing"), d('e', true))
  t.ok(Thing.isThing)
  var thing = Thing.new()
  t.ok(thing.isThing)
  t.end()
})

test('can extend entity with get prop', function (t) {
  var Person = Entity.extend({
    props: {
      firstName: d('we', ''),
      lastName: d('we', ''),
      fullName: d.gs('e', function () {
        return this.firstName + " " + this.lastName
      }),
    },
  })
  t.equal(getOwn(Person, "firstName").value, '')
  t.equal(getOwn(Person, "lastName").value, '')
  t.equal(typeof getOwn(Person, "fullName").get, 'function')
  var person = Person.new({
    firstName: "Michael",
    lastName: "Williams",
  })
  // TODO Person.new doesn't work as expected in that props are frozen
  t.equal(person.firstName, 'Michael')
  t.equal(person.lastName, 'Williams')
  t.equal(person.fullName, "Michael Williams")
  t.end()
})
