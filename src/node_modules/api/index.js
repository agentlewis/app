var express = require('express')
var FsDb = require('fs-db')
var pull = require('pull-stream')
var sendJson = require('send-data/json')
var debug = require('debug')('holodex:api')
var yaml = require('js-yaml')
var clone = require('lodash').clone

var Model = require('base/model')

module.exports = createApi

function createApi (config) {
  debug('config', config)

  var api = express()

  var db = FsDb({
    location: config.data.location,
    idAttribute: '@id',
    codec: {
      type: 'yml',
      encode: function (obj) {
        return yaml.safeDump(obj)
      },
      decode: function (str) {
        return yaml.safeLoad(str)
      }
    }
  })

  var graph = undefined
  var queue = []

  pull(
    db.createReadStream(),
    pull.map(function (item) {
      attrs = clone(item)
      attrs['@id'] = attrs.id
      delete attrs.id
      return attrs
    }),
    pull.collect(function (err, arr) {
      if (err) { throw err }

      graph = arr.map(function (item) {
        return Model.new(item)
      })

      queue.forEach(function (cb) { cb() })
      queue = []
    })
  )

  api.get('/*', function (req, res) {
    debug('get', req.path)
    if (graph == null) {
      queue.push(sendGraph.bind(null, req, res))
    } else {
      sendGraph(req, res)
    }
  })

  function sendGraph (req, res) {
    var json = {
      "@context": {},
      "@graph": graph.map(function (model) {
        return model.toJSON()
      })
    }
    sendJson(req, res, {
      statusCode: 200,
      body: json
    }, function (err) {
      if (err) { throw err }
    })
  }

  return api
}
