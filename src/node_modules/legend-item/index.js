var React = require('react')
var r = require('r-dom')
var Actions = require('actions')
var mui = require('material-ui')
var Toggle = require('material-ui/lib/toggle')
var debug = require('debug')('legend-item')
var SvgIcon = require('material-ui/lib/svg-icon')
var arrowRightPath = 'M23.143 11.96q0 0.188-0.134 0.321l-5.143 4.741q-0.214 0.188-0.469 0.080-0.254-0.121-0.254-0.388v-3h-16.714q-0.188 0-0.308-0.121t-0.121-0.308v-2.571q0-0.188 0.121-0.308t0.308-0.121h16.714v-3q0-0.281 0.254-0.388t0.469 0.067l5.143 4.688q0.134 0.134 0.134 0.308z'
var format = require('format-text')

module.exports = React.createClass({

  propTypes: {
    icon: React.PropTypes.element,
    data: React.PropTypes.object,
    label: React.PropTypes.string,
    hasToggle: React.PropTypes.bool,
    onToggle: React.PropTypes.func
  },

  contextTypes: {
    muiTheme: React.PropTypes.any
  },

  shouldComponentUpdate: function () {
    return false
  },

  render: function () {
    debug('render legend-widget', this.props, this.context)
    var label = this.props.data.component.labels.split(',')[0]
    label = format(label, { source: '', target: '' })

    return r.div(
      {
        className: 'legend-item',
        style: {
          display: 'flex',
          marginTop: this.context.muiTheme.spacing.desktopGutterMini,
          marginBottom: this.context.muiTheme.spacing.desktopGutterMini,
          marginLeft: this.context.muiTheme.spacing.desktopGutterLess,
          marginRight: this.context.muiTheme.spacing.desktopGutter,
          flexDirection: 'row'
        }
      },
      [
        r(SvgIcon, {
            color: this.props.data.component.color,
            style: {
              marginRight: this.context.muiTheme.spacing.desktopGutterMini
            }
          },
          [
            r.path({ d: arrowRightPath })
          ]
        ),
        r(Toggle, {
          ref: 'muiToggle',
          defaultToggled: this.props.data.showLink,
          onToggle: this.handleToggle(this.props.data),
          label: label,
          labelPosition: 'left',
          labelStyle: {
            fontFamily: 'inherit',
            fontSize: 13,
            textAlign: 'center',
            color: this.props.data.component.color
          }
        })
      ]
    )
  },

  handleToggle: function (query) {
    return function (e, toggled) {
      debug('handleToggle', e, toggled, query)
      Actions.toggleShowLink({ queryId: query.id, showLink: toggled })
    }
  }
})
