'use strict';
const createSelector = require('reselect').createSelector
const mapKeys = require('object-keys-map')
const debug = require('debug')('holodex:types')
const each = require('lodash.foreach')
const map = require('lodash.map')
const flatten = require('lodash.flatten')
const zipObject = require('lodash.zipobject')

let types = {
  agentTypes: require('agent-type'),
  agents: require('agent'),
  relationshipTypes: require('relationship-type'),
  relationships: require('relationship'),
  queryTypes: require('query-type'),
  // queries: require('query'),
}

const getterKeys = []

const getters = flatten(map(types, (type, key) => {
  return map(type.getters, (getter, getterKey) => {
    getterKeys.push(getterKey)
    return getter
  })
}))

types.getters = createSelector(
  getters,
  () => {
    return zipObject(getterKeys, getters)
  }
)

debug(types)
module.exports = types
