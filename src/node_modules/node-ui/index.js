
var debug = require('debug')('node-ui')
import { each, map } from 'lodash'
import el from 'vdom-element'
var extend = require('xtend')
var coordTransform = require('util/coordinate-transform')
var getScreenCoords = require('util/get-screen-coords')

var style = {
  avatar: {
    cursor: 'pointer',
    border: '2px solid white',
    WebkitBoxShadow: '0px 0px 5px rgba(48,48,48,0.9)',
    boxShadow: '0px 0px 5px rgba(48,48,48,0.9)'
  },

  node: {
    position: 'absolute'
  }
}




function render (props) {
  debug('render', props)
  const { x, y, width, height, image, id } = props


  return el('g', { class: 'node' }, [
    el('circle', { attributes: {
      cx: x,
      cy: y,
      r: Math.max(width / 2) + 2,
      fill: '#ECEFF1'
    }})
    // el('clipPath', { id: id + '/node-clip-path' }, [
    //   el('circle', { attributes: {
    //     cx: x,
    //     cy: y,
    //     r: Math.max(width, height) / 2
    //   }})
    // ]),
    // el('image', { attributes: {
    //   "xlink:href": image,
    //   // onClick: this.handleClick,
    //   // onMouseOver: this.handleMouseOver,
    //   // onMouseOut: this.handleMouseOut,
    //   height: `${height}px`,
    //   width: `${width}px`,
    //   x: x - width / 2,
    //   y: y - height / 2
    // },
    // style: extend(style.avatar, {
    //   clipPath: 'url(#' + id + '/node-clip-path)'
    // })
    // })
  ])
}

export {
  render
}



//
//
// module.exports = React.createClass({
//
//   contextTypes: {
//     svg: React.PropTypes.any
//   },
//
//   propTypes: {
//     x: React.PropTypes.number,
//     y: React.PropTypes.number,
//     id: React.PropTypes.string,
//     width: React.PropTypes.number,
//     height: React.PropTypes.number,
//     image: React.PropTypes.string,
//
//     // vector: React.PropTypes.array,
//     // node: React.PropTypes.object.isRequired,
//     // handleClick: React.PropTypes.func
//   },
//
//   render: function () {
//     debug(this.props)
//     const { x, y, width, height, image, id } = this.props
//     debug(image)
//
//     var img =         r.image({
//               xlinkHref: image,
//               // onClick: this.handleClick,
//               // onMouseOver: this.handleMouseOver,
//               // onMouseOut: this.handleMouseOut,
//               // style: extend(style.avatar, {
//               //   clipPath: 'url(#' + id + '/node-clip-path)'
//               // }),
//               height: height,
//               width: width,
//               x: x - width / 2,
//               y: y - height / 2
//             })
//
//     debug(img)
//
//     return (
//       r.g({ className: 'node' }, [
//         r.circle({
//           cx: x,
//           cy: y,
//           r: Math.max(width / 2) + 2,
//           fill: '#ECEFF1'
//         }),
//         r.clipPath({
//           id: id + '/node-clip-path'
//         }, [
//           r.circle({
//             cx: x,
//             cy: y,
//             r: Math.max(width, height) / 2
//           })
//         ]),
//         r.image({
//           xlinkHref: image,
//           // onClick: this.handleClick,
//           // onMouseOver: this.handleMouseOver,
//           // onMouseOut: this.handleMouseOut,
//           style: extend(style.avatar, {
//             clipPath: 'url(#' + id + '/node-clip-path)'
//           }),
//           height: height,
//           width: width,
//           x: x - width / 2,
//           y: y - height / 2
//         }),
//         // r.circle({
//         //   cx: node.x,
//         //   cy: node.y,
//         //   r: Math.max(node.w, node.h) / 2,
//         //   opacity: 0,
//         //   onMouseOver:
//         // })
//       ])
//     )
//   },
//
//   // handleClick: function () {
//   //   var model = this.props.node.data
//   //   this.props.handleClick(model)
//   // },
//
//   // handleMouseOver: function (e) {
//   //   debug('handleMouseOver(this.context)
//   //   //convert mouse coordinates to svg coordinates
//   //   //convert mouse coordinates to svg coordinates
//   //   var DOMNode = React.findDOMNode(this.context.svg)
//   //   var layer = DOMNode.getElementById('transform-layer')
//   //
//   //   var elem = React.findDOMNode(this)
//   //
//   //
//   //
//   //   var corners = getScreenCoords(DOMNode, elem)
//   //
//   //
//   //   debug('corners(corners)
//   //   var svgGlobal = coordTransform({
//   //     DOMNode: DOMNode,
//   //     layer: layer,
//   //     coords: [this.props.node.x, this.props.node.y]
//   //   })
//   //
//   //   // var p = m(
//   //   //   this.props.vector,
//   //   //   [svgGlobal.x, svgGlobal.y, 1]
//   //   // )
//   //   // debug(p, svgGlobal)
//   //
//   //   this.props.handleMouseOver(corners)
//   //   // this.props.handleMouseOver([svgGlobal.x, svgGlobal.y], this.props.node.w)
//   // },
//
//   // handleMouseOut: function () {
//   //   debug('handleMouseOut')
//   //   this.props.handleMouseOut()
//   // }
//
//
// })
