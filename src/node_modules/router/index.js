var config = require('clientconfig');
var Path = require('path');
var pathMatch = require('path-match')();
var reverend = require('reverend');
var querystring = require('querystring')

function Router (config) {
  this.config = config;

  if (process.browser) {
    var Location = require('observ-location');
    this.location = Location(config);
  }

  this.path = ":collection/:id/:relation";
  this.pathToRoute = pathMatch(this.path);
  this.routeToPath = function (route) {
    return reverend(this.path, route)
  };
}

Router.prototype.parse = function (path) {

  // split path into pathname and search
  var pathSplit = path.split('?');
  var pathname = pathSplit[0];
  var search = pathSplit[1];

  // remove prefix from pathname
  pathname = pathname.replace(this.config.prefix || "/", "");
  
  // parse path into route
  var route = this.pathToRoute(pathname);
  
  // parse search into query
  route.query = querystring.parse(search);

  return route;
}

Router.prototype.format = function (route) {

  // format route into pathname
  var pathname = this.routeToPath(route);

  // add prefix to path
  pathname = Path.join(this.config.pathname || "/", pathname);

  // parse query into search
  var search = querystring.stringify(route.query || {});

  // join pathname and search into path
  var path = pathname + "?" + search

  return path;
}

module.exports = new Router(config);
