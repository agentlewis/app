var insertCss = require('insert-css')
var r = require('r-dom')
var React = require('react')
var fs = require('fs')
var debug = require('debug')('sidebar:index')
var IconFactory = require('react-icon-factory')

var simpleSidebarCSS = fs.readFileSync(__dirname + '/sidebar.css')
insertCss(simpleSidebarCSS)

var Icon = IconFactory({
  'long-arrow-left': r.g([
    r.path(
      { d: "M20 8h-12.17l5.59-5.59-1.42-1.41-8 8 8 8 1.41-1.41-5.58-5.59h12.17v-2z" }
    )
    ]
  ),
})


var HARD_CODED_NAV_DATA = {
  parentGroup: { name: 'Enspiral Services' },
  siblings: [
    { name: 'Craftworks', active: true },
    { name: 'Iguanas' },
    { name: 'Noshi Creative' },
    { name: 'Lean Labs' },
    { name: 'Purposive' },
  ]
}



module.exports = React.createClass({

  render: function () {
    var self = this
    var model = self.props.model



    return r.div(
      { id: 'sidebar-wrapper' },
      [
        r.ul( { className: 'sidebar-nav'}, [
          r.li({ className: 'sidebar-brand'}, [
            Icon({ icon: 'long-arrow-left'}),
            r.a({ href: '#'}, HARD_CODED_NAV_DATA.parentGroup.name   )
          ]),
          r.ul({ className: 'sibling-group' }, [
            HARD_CODED_NAV_DATA.siblings.map(function (sibling) {
              if (sibling.active) {
                return r.div({ className: 'active-group' }, [
                  r.li({ className: 'active sibling' }, [
                    r.a({ href: '#' }, sibling.name),
                  ]),
                  r.div({ className: 'active-behind' })
                ])
              }
              return r.li({ className: 'sibling'}, [
                  r.a({ href: '#'}, sibling.name),
              ])
            }),
          ]),
          r.div({ className: 'obscure-border-bottom'}),

          //NOTE assumes children are wrapped in <li>'s
          //may need a React.children utilities
          r.div({}, self.props.children),
        ])
      ]
    )
  },

  componentDidMount: function () {
    this.props.model.on('change', function (model, val) {
      this.forceUpdate()
    }, this)
  }
})
