var config = require('config')
var Base = require('ampersand-collection')
var lodashMixin = require('ampersand-collection-lodash-mixin')
var restMixin = require('ampersand-collection-rest-mixin')
var debug = require('debug')("holodex:base:collection")
var camelCase = require('camel-case')
var _ = require('lodash')

var registry = require('registry')
var linkDataType = require('./data-types/link')

var sync = require('./sync')

module.exports = Base.extend(
  lodashMixin,
  restMixin,
  {
    initialize: function () {
      this.sync = sync(this) || this.sync
    },
    serialize: function () {
      return this.models.map(function (model) {
        return model.getId()
      })   
    },
    url: function () {
      var pluralName = camelCase(this.collectionType)
      return Url.format(config.api) + pluralName
    },
    set: function (models, options) {
      //debug("set", models, options)

      models = !_.isArray(models) ?
        (models ? [models] : []) : models.slice()

      models = models.map(function (model) {
        // if is url link, get from registry
        if (linkDataType.isLinkObj(model)) {
          return registry.get(model['@id'])
        }
        if (linkDataType.isLink(model)) {
          return registry.get(model)
        }
        return model
      })

      //debug("calling base set", models, options)
      return Base.prototype.set.call(this, models, options)
    }
  }
)
