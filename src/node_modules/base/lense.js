var Base = require('selfish')
var _ = require('lodash')

var BaseModel = require('./model')

module.exports = Base.extend({
  
  model: BaseModel,

  initialize: function (store) {
    this.store = store
    this.collection = store.db.addCollection(
      this.Model.pluralName, {
        indices: Object.keys(this.Model.prototype._props),
      }
    )
  },

  add: function (data) {
    data = data || {}

    var idAttribute = this.Model.idAttribute

    var model
    if (data[idAttribute]) {
      model = this.find(data[idAttribute])
    }

    if (model) {
      model.set(data)
    } else {
      model = Model.new(data)
      this.collection.insert(model)
    }
    return model
  },

  where: function (params) {
    return this.collection.chain().find(params).data()
  },

  belongingTo: function (params) {
    return this.collection
      .addDynamicView(this.viewName(params))
      .applyFind(params)
  },

  viewName: function (params) {
    return (
      _.keys(params).join() +
      _.values(params).join()
    )
  },

  find: (q) {
    if (_.isString(q)) {
      return this.findById(q)
    } else if (_.isArray(q)) {
      if (q.length === 0) {
        return []
      } else {
        return this.findByIds(q)
      }
    } else {
      return this.collection.find(q)
    }
  },

  findById: function (id) {
    var q = {}
    q[this.Model.idAttribute] = id
    return this.collection.find(q)
  },

  findByIds: function (ids) {
    var q = {}
    q[this.Model.idAttribute] = {
      $in: ids,
    }
    return this.collection.find(q)
  },
})
