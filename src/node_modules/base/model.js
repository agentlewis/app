var Url = require('url')
var config = require('config')
var Base = require('ampersand-model')
var debug = require('debug')("holodex:base:model")
var urlRe = require('url-regex')({ exact: true })

var registry = require('registry')
var urlDataType = require('./data-types/url')
var linkDataType = require('./data-types/link')

module.exports = Base.extend({

  typeAttribute: "modelType",
  idAttribute: "@id",
  namespaceAttribute: "@graph",

  extraProperties: 'ignore',

  initialize: function () {
  
    // on model initialize, add model to registry
    debug("adding", this.getId(), "to registry")
    registry.set(this.getId(), this)

    // on model destroy, remove model from registry
    this.on('destroy', function() {
      debug("deleting", this.getId(), "from registry")
      registry['delete'](this.getId())
    }, this)

    // on model changing id, rename model in registry
    this.on('change:' + this.idAttribute, function () {
      var oldId = this.previousAttributes()[this.idAttribute]
      var newId = this.attributes[this.idAttribute]
      debug("moving", oldId, "to", newId)
      registry['delete'](oldId)
      registry.set(newId, this)
    }, this)

    // on model changing id, ensure it is url
    this.on('change:' + this.idAttribute, this.ensureFullId, this)
    this.ensureFullId()
  },

  props: {
    "@id": "string",
    "@type": "string",
    "@context": "object",
  },

  dataTypes: {
    link: linkDataType,
    url: urlDataType,
  },

  ensureFullId: function () {
    var id = this.getId()
    if (id && !linkDataType.isLink(id)) {
      var newId = linkDataType.prefixLink(id)
      debug("prefixing id", id, newId)
      this[this.idAttribute] = newId
    }
  },

  derived: {
    id: {
      deps: ["@id"],
      fn: function () {
        var id = this.getId()
        var api = Url.format(config.api)

        if (!id) {
          return null
        }

        var subId = id.substring(0, api.length)
        if (id.substring(0, api.length) === api) {
          return id.substring(api.length)
        } else {
          return id
        }
      },
    },
  },

  url: function () {
    var id = this.getId()
    var api = Url.format(config.api)

    var url = null
    if (urlRe.test(id)) {
      url = id
    } else if (id) {
      url = api + "/" + id
    }

    debug("url() ->", url, this)
    return url
  },
})
