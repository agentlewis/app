var UrlRe = require('url-regexp');
var config = require('uiconfig');
var extend = require('xtend/mutable');
var inherits = require('inherits');
var Model = require('ampersand-model');
var debug = require('debug')("craftodex:ui:base:model");

function BaseModel () {
  Model.apply(this, arguments);
}

module.exports = BaseModel;

inherits(BaseModel, Model);

extend(BaseModel.prototype, {

  typeAttribute: "modelType",
  idAttribute: "@id",
  namespaceAttribute: "@graph",

  extraProperties: 'reject',

  props: {
    "@id": "string",
    "@type": "string",
    "@context": "object",
  },

  derived: {
    id: {
      deps: ["@id"],
      fn: function () {
        var api = config.api;
        var id = this.getId();

        if (id.substring(0, api.length) === api) {
          var idSplit = id.split('/');
          return idSplit[idSplit.length - 1];
        } else {
          return id
        }
      },
    },
  },

  url: function () {
    var types = require('types');
    var id = this.getId();

    var url;
    if (UrlRe.validate(id)) {
      url = id;
    } else {

      var api = config.api;
      var type = this.getType();
      var collection = types[type].plural;

      url = api + "/" + collection +
        (id ? ("/" + id) : "")
      ;
    }

    debug("url() ->", url, this);
    return url;
  },
});
