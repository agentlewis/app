var test = require('tape')
var Observ = require('observ')
var ObservModel = require('observ-model')
var ObservGraph = require('../')

test('one model', function (t) {
  var models = {
    Thing: ObservModel.createClass({
      props: {
        name: Observ(),
      },
    }),
  }
  var things = ObservGraph({
    models: models,
  })
  var thing = {
    type: 'Thing',
    name: 'human',
  }
  things.insert(thing)
  t.equal(things.getLength(), 1)
  t.deepEqual(things.get(0)(), thing)
  t.end()
})

test('type attribute', function (t) {
  var models = {
    Thing: ObservModel.createClass({
      props: {
        name: Observ(),
      },
    }),
  }
  var things = ObservGraph({
    models: models,
    typeAttribute: '@type',
  })
  var thing = {
    '@type': 'Thing',
    name: 'human',
  }
  things.insert(thing)
  t.equal(things.getLength(), 1)
  t.deepEqual(things.get(0)(), thing)
  t.end()
})

/*
test('relations', function (t) {
  var Space = ObservModel.createClass({
    props: {
      id: Observ(),
    },
  })

  agentModel.$roles = map(context.atom.$roles, function (role) {
    if (role.$agent.$id() === agentModel.$id()) {
      return role
    }
  })

  agentModel.$relationships = map(agentModel.$roles, function (role) {
    return role.relationship
  })
})
*/
